[
    {
        "question": "What does doctype in HTML do?",
        "category":"HTML",
        "answers": [
          {"answer": "Tells the browser how to render the HTML markup", "value": true},
          {"answer": "Loads all references to external JavaScript files", "value": false}, 
          {"answer": "Adds CSS styles to the HTML page", "value": false}, 
          {"answer": "It doesn't do anything it's just there as a comment to other developers", "value": false}
        ]
    },
    {
        "question": "How do you declare the language in HTML?",
        "category":"HTML",
        "answers": [
          {"answer": "A language attribute can be added to the HTML tag", "value": true},
          {"answer": "A language attribute should be added to the body tag", "value": false}, 
          {"answer": "There's no way to declare it in HTML, it requires JavaScript", "value": false}, 
          {"answer": "By adding a class to the body tag", "value": false}
        ]
    },
    {
        "question": "What are data- attributes good for?",
        "category":"HTML",
        "answers": [
          {"answer": "Provide the ability to embed custom data attributes on all HTML elements", "value": true},
          {"answer": "Create a way to not have to use classes and IDs for styling", "value": false}, 
          {"answer": "They aren't good because they are legacy attributes that are no longer used in HTML5", "value": false}, 
          {"answer": "They are good for accessibility", "value": false}
        ]
    },
    {
        "question": "What is NOT an HTML5 element?",
        "category":"HTML",
        "answers": [
          {"answer": "block", "value": true},
          {"answer": "audio", "value": false}, 
          {"answer": "canvas", "value": false}, 
          {"answer": "section", "value": false}
        ]
    },
    {
        "question": "What is the difference between sessionStorage and localStorage?",
        "category":"HTML",
        "answers": [
          {"answer": "localStorage stores data with no expiration date", "value": true},
          {"answer": "sessionStorage can only be used once", "value": false}, 
          {"answer": "sessionStorage holds more data", "value": false}, 
          {"answer": "There's no difference they both accomplish the same thing", "value": false}
        ]
    },
    {
        "question": "How can you make a script run asynchronous?",
        "category":"HTML",
        "answers": [
          {"answer": "script async", "value": true},
          {"answer": "asynchronous", "value": false}, 
          {"answer": "async script", "value": false}, 
          {"answer": "script asynchronous", "value": false}
        ]
    },
    {
        "question": "What is WAI-ARIA?",
        "category":"HTML",
        "answers": [
          {"answer": "Web Accessibility Initiative â€“ Accessible Rich Internet Applications", "value": true},
          {"answer": "Web Access Internationaly - All Real Internet Areas", "value": false}, 
          {"answer": "Web standards", "value": false}, 
          {"answer": "A group that focuses on helping browser load times", "value": false}
        ]
    },
    {
        "question": "What is the difference between classes and IDs in CSS?",
        "category":"CSS",
        "answers": [
          {"answer": "IDs can only be used once in the HTML", "value": true},
          {"answer": "IDs can be accessed by JavaScript", "value": false}, 
          {"answer": "Classes are used on children elements", "value": false}, 
          {"answer": "Classes can't be added to the body element", "value": false}
        ]
    },
    {
        "question": "What does 'reset' in CSS mean?",
        "category":"CSS",
        "answers": [
          {"answer": "Resets the default browser styling", "value": true},
          {"answer": "Normalizes styles accross all browsers", "value": false}, 
          {"answer": "Removes inline CSS styles", "value": false}, 
          {"answer": "Start the project over", "value": false}
        ]
    },
    {
        "question": "What does z-index do?",
        "category":"CSS",
        "answers": [
          {"answer": "Controls the vertical stacking order of elements that overlap", "value": true},
          {"answer": "Moves elements off screen", "value": false}, 
          {"answer": "Hides elements from the screen", "value": false}, 
          {"answer": "Controls the horizontal stacking order of elements that overlap", "value": false}
        ]
    },
    {
        "question": "What does clearfix in CSS do?",
        "category":"CSS",
        "answers": [
          {"answer": "Fixes issues related to floating child elements within a parent element", "value": true},
          {"answer": "Removes elements from the DOM", "value": false}, 
          {"answer": "Hides content off screen", "value": false}, 
          {"answer": "Used for continuous scroll", "value": false}
        ]
    },
    {
        "question": "What are Sass, Stylus and LESS?",
        "category":"CSS",
        "answers": [
          {"answer": "CSS pre-processors", "value": true},
          {"answer": "CSS frameworks", "value": false}, 
          {"answer": "Repsonsive CSS grid systems", "value": false}, 
          {"answer": "Types of CSS", "value": false}
        ]
    },
    {
        "question": "What is the box model?",
        "category":"CSS",
        "answers": [
          {"answer": "All HTML elements can be considered as boxes", "value": true},
          {"answer": "A way of stacking HTML elements", "value": false}, 
          {"answer": "A way of styling HTML elements", "value": false}, 
          {"answer": "Creates a way to position the browser grid", "value": false}
        ]
    },
    {
        "question": "What does the 'C' in CSS stand for?",
        "category":"CSS",
        "answers": [
          {"answer": "Cascading", "value": true},
          {"answer": "Concatenate", "value": false}, 
          {"answer": "Color", "value": false}, 
          {"answer": "Complete", "value": false}
        ]
    },
    {
        "question": "Which one of these is a CSS framework?",
        "category":"CSS",
        "answers": [
          {"answer": "Bootstrap", "value": true},
          {"answer": "Angular", "value": false}, 
          {"answer": "Backbone", "value": false}, 
          {"answer": "CSS Block", "value": false}
        ]
    },
    {
        "question": "Why is it better to use translate() rather than an position:absolute Top/Right/Bottom/Left?",
        "category":"CSS",
        "answers": [
          {"answer": "Better performance", "value": true},
          {"answer": "More browser support", "value": false}, 
          {"answer": "Easier to use", "value": false}, 
          {"answer": "Position:absolute is only supported in legacy browsers", "value": false}
        ]
    },
    {
        "question": "What is the default box-sizing propery?",
        "category":"CSS",
        "answers": [
          {"answer": "content-box", "value": true},
          {"answer": "border-box", "value": false}, 
          {"answer": "initial", "value": false}, 
          {"answer": "inherit", "value": false}
        ]
    },
    {
        "question": "What is the Breakfast of Champions?",
        "category":"Food",
        "answers": [
          {"answer": "Dosa", "value": true},
          {"answer": "Idli", "value": false}, 
          {"answer": "Pancakes", "value": false}, 
          {"answer": "Waffles", "value": false}
        ]
    },
    {
        "question": "How do you select all the &lt;p&gt; elements that come after a &lt;div&gt; element?",
        "category":"CSS",
        "answers": [
          {"answer": "div + p", "value": true},
          {"answer": "div &gt; p", "value": false}, 
          {"answer": "div * p", "value": false}, 
          {"answer": "div p", "value": false}
        ]
    },
    {
        "question": "How do you create a DOM node with JavaScript?",
        "category":"JavaScript",
        "answers": [
          {"answer": "document.createElement();", "value": true},
          {"answer": "window.createElement();", "value": false}, 
          {"answer": "window.createNewElement();", "value": false}, 
          {"answer": "document.createNewElement();", "value": false}
        ]
    },
    {
        "question": "What is a function in JavaScript?",
        "category":"JavaScript",
        "answers": [
          {"answer": "A function is a block of code designed to perform a task", "value": true},
          {"answer": "A calculation method", "value": false}, 
          {"answer": "A tool for writing JavaScript", "value": false}, 
          {"answer": "Libraries or frameworks added to a project", "value": false}
        ]
    },
    {
        "question": "What is an array?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Stores multiple values in a single variable", "value": true},
          {"answer": "A way to sort numbers", "value": false}, 
          {"answer": "Styles elements in the DOM", "value": false}, 
          {"answer": "None of these are correct", "value": false}
        ]
    },
    {
        "question": "What is a variable?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Is a container for storing data values", "value": true},
          {"answer": "A contitional statement", "value": false}, 
          {"answer": "A name for all functions", "value": false}, 
          {"answer": "A way to log events to the browser", "value": false}
        ]
    },
    {
        "question": "What is CommonJS?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Creates a way to include JavaScript modules within the current scope", "value": true},
          {"answer": "Groups all common functions in JavaScript", "value": false}, 
          {"answer": "An extensive list of JavaScript libraries and frameworks", "value": false}, 
          {"answer": "A way to minify and Concatenate JavaScript files", "value": false}
        ]
    },
    {
        "question": "In JavaScript when will a variable be undefined?",
        "category":"JavaScript",
        "answers": [
          {"answer": "When a variable hasn't be defined with a value", "value": true},
          {"answer": "A variable can never be undefined", "value": false}, 
          {"answer": "Variable exists and is set to null", "value": false}, 
          {"answer": "When a variable isn't declared with 'var'", "value": false}
        ]
    },
    {
        "question": "What does asynchronous mean?",
        "category":"JavaScript",
        "answers": [
          {"answer": "A script will send a request to the server, and continue its execution without waiting for the reply", "value": true},
          {"answer": "A task calls another task", "value": false}, 
          {"answer": "Order of operation", "value": false}, 
          {"answer": "One task waits for the next task to finish before running", "value": false}
        ]
    },
    {
        "question": "What does document.write() do?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Adds a string to the DOM", "value": true},
          {"answer": "Deletes elements from the DOM", "value": false}, 
          {"answer": "Writes string values to the console for debugging", "value": false}, 
          {"answer": "Writes the date to a DOM element", "value": false}
        ]
    },
    {
        "question": "What does AJAX mean?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Asynchronous JavaScript and XML", "value": true},
          {"answer": "Alternative JavaScript Action XML", "value": false}, 
          {"answer": "Accessible XML", "value": false}, 
          {"answer": "None of the above", "value": false}
        ]
    },
    {
        "question": "What is event bubbling?",
        "category":"JavaScript",
        "answers": [
          {"answer": "The handler of the parent works even if the child is clicked", "value": true},
          {"answer": "A type of animation easing", "value": false}, 
          {"answer": "Events that cause errors in the browser", "value": false}, 
          {"answer": "Surfacing an event", "value": false}
        ]
    },
    {
        "question": "Difference between document load event and document ready event?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Ready event occurs after the HTML document is loaded, while the onload event occurs later, when all content is loaded", "value": true},
          {"answer": "Both events accomplish the same thing", "value": false}, 
          {"answer": "Ready event occurs when all HTML elements and images have been loaded, while the onload event occurs when the HTML Head is loaded", "value": false}, 
          {"answer": "Document load doesn't work without document ready event", "value": false}
        ]
    },
    {
        "question": "How do JavaScript closures work?",
        "category":"JavaScript",
        "answers": [
          {"answer": "A function within another function, the inner function has access to variables in the outer function", "value": true},
          {"answer": "It's a way to close a function in JavaScript", "value": false}, 
          {"answer": "JavaScript doesn't use closures", "value": false}, 
          {"answer": "Closures help structure objects in JavaScript", "value": false}
        ]
    },
    {
        "question": "What are JavaScript prototypes?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Prototypes allow you to easily define methods to all instances of a particular object", "value": true},
          {"answer": "A JavaScript library", "value": false}, 
          {"answer": "A JavaScript framework for building a prototype quick and easily", "value": false}, 
          {"answer": "Prototypes are functions that can be written to update arrays", "value": false}
        ]
    },
    {
        "question": "What does MVC mean?",
        "category":"JavaScript",
        "answers": [
          {"answer": "Model view controller", "value": true},
          {"answer": "Models virtually computed", "value": false}, 
          {"answer": "Mixins variable commands", "value": false}, 
          {"answer": "Messaging virtual computer", "value": false}
        ]
    },
    {
        "question": "What's the first thing you should do when you start a node project?",
        "category":"Node",
        "answers": [
          {"answer": "npm init", "value": true},
          {"answer": "npm install", "value": false}, 
          {"answer": "npm start", "value": false}, 
          {"answer": "npm initialize", "value": false}
        ]
    },
    {
        "question": "What is the manifest file for a node project?",
        "category":"Node",
        "answers": [
          {"answer": "package.json", "value": true},
          {"answer": ".npmrc", "value": false}, 
          {"answer": ".node", "value": false}, 
          {"answer": "readme.md", "value": false}
        ]
    },
    {
        "question": "How do you expose variables in node that can be required into other files?",
        "category":"Node",
        "answers": [
          {"answer": "module.exports", "value": true},
          {"answer": "mod.exports", "value": false}, 
          {"answer": "module.export", "value": false}, 
          {"answer": "modules.export", "value": false}
        ]
    },
    {
        "question": "What will be logged in the console for the following code: console.log(a); var a = 'blue'; a = 'green'; ?",
        "category":"JavaScript",
        "answers": [
          {"answer": "undefined", "value": true},
          {"answer": "You will get an error.", "value": false}, 
          {"answer": "blue", "value": false}, 
          {"answer": "green", "value": false}
        ]
    },
    {
        "question": "How do you create ONE event handler for a click on any &lt;p&gt; element inside a &lt;div&gt; element using jQuery?",
        "category":"jQuery",
        "answers": [
          {"answer": "$('div').on('click', 'p', function() { console.log('someone clicked me!'); });", "value": true},
          {"answer": "$('div p').on('click', function() { console.log('someone clicked me!'); });", "value": false}, 
          {"answer": "$('div').find('p').on('click', function() { console.log('someone clicked me!'); });", "value": false}, 
          {"answer": "$('div').filter('p').on('click', function() { console.log('someone clicked me!'); });", "value": false}
        ]
    },
    {
        "question": "How do you select all the &lt;div&gt; elements and all the &lt;p&gt; elements in the DOM using jQuery?",
        "category":"jQuery",
        "answers": [
          {"answer": "$('div, p')", "value": true},
          {"answer": "$.find('div + p')", "value": false}, 
          {"answer": "$('div + p')", "value": false}, 
          {"answer": "$('div').find('p')", "value": false}
        ]
    },
    {
        "question": "How do you write an if statement in Handlebars?",
        "category":"JavaScript",
        "answers": [
          {"answer": "{{#if someVar}}&lt;div&gt;{{someVar}}&lt;/div&gt;{{/if}}", "value": true},
          {"answer": "if (someVar) { &lt;div&gt;{{someVar}}&lt;/div&gt; }", "value": false}, 
          {"answer": "{$if someVar}&lt;div&gt;{{someVar}}&lt;/div&gt;{/if}", "value": false}, 
          {"answer": "if (someVar) {{{&lt;div&gt;{{someVar}}&lt;/div&gt;}}}", "value": false}
        ]
    }
]
